"Timestamp","On a scale of 1 to 5, where 1 indicates not likely at all and 5 indicates extremely likely, What potential impact do you see for AI in your field of work.","What is the issue/problem that you want to solve using AI?","How well do you understand the problem/issue? And what do you mean you want to use AI for that issue/problem?","On a scale of 1 to 5, where 1 indicates not likely at all and 5 indicates extremely likely, how comfortable are you with integrating AI technologies into the software development department?","Elaborating in above Likert scale question, What challenges and obstacles do you see in integrating AI tools to enhance your performance in development department?","On a scale of 1 to 5, where 1 indicates not likely at all and 5 indicates extremely likely, how effective are AI driven software automated testing tools?","Elaborating in above Likert scale question, Would it be possible to utilize AI to anticipate and prevent potential software vulnerabilities and security threats? How?","On a scale of 1 to 5, where 1 indicates not likely at all and 5 indicates extremely likely, how effective do you think AI tools are to improve work optimization and task delivery speed?","Expanding in above Likert scale question, Could AI streamline repetitive and time-consuming tasks, enhancing overall speed and efficiency? What kind of tasks does AI is most useful for in your workflow?","On a scale of 1 to 5, where 1 indicates not likely at all and 5 indicates extremely likely, how effective do you think integrating AI technologies into the software development department would be?","Expanding in above Likert scale question, How effective do you think AI tool would be for your current workflow, and what support or resources would you need to facilitate the adoption and use? ","Any feedback or further suggestion?"
"2024/03/06 11:53:34 pm EET","4","Testing after implementing or bug fixing. AI should give response that other functions for example are broken after changing something in code so you can't deploy before fixing it.","Not sure","3","AI should know the current code well and i think that this is currently not possible.","2","I think it would be possible if the AI knows the code well. ","4","Giving error messages while implementing. Knowing the code well so you can't miss something for example while refactoring code.","4","Auto Refactoring or auto updating Independencies, or auto help while doing those steps manually. Auto testing or warning you while implementation.",""
"2024/03/07 8:31:39 am EET","5","Explain/Describe Code; Quickly write or refactor simple code snippets; Find alternative solutions in ways I haven't considered","AI tools like copilot are very helpful in helping me understand unfamiliar code, not only for writing but also just comprehending","4","People might get too reliant on AI and may be too lazy to properly check if any generated code could be faulty","4","Probably. Those tools are trained on more data than we as a human can possibly consider ourselves. They may not be able to predict future issues, but security concerns of the past should be covered well","5","100%. Copilot is great for simple and repetitive tasks that dont require a deep understanding of business logic. And its also super helpful in explaining existing code at least on a technical level","4","Copilot, Chatgpt. At the moment those cover what we need. As for other resources related to that: I guess users need to know how to prompt for the results they desire",""
"2024/03/07 8:38:34 am EET","5","Generation of unit tests, Generation of testing notes, automated generation of change logs, enhanced ticket descriptions, enhanced user stories, enhanced source code, automated source code reviews, implementation suggestions.","I don't understand the question.","5","Acceptance of team members, bad code basis, high technical debts.","5","Yes. By AI based automated pentests.","5","Yes. See above. Testing notes, test cases, change log entries, ticket descriptions...","5","Very.",""
"2024/03/07 12:27:06 pm EET","4","Become faster at writing boilerplate code and other common general purpose code.","I expect AI to be faster at generating the code that I want, instead of basically copying code and replacing certain parts, like class definitions. I would either copy code from different parts of the software or from stackoverflow and would adapt it to the new usage.","5","- Not having the AI integration for certain IDEs
- Increasing cost factor
- Privacy issue when exposing a third-party toolt to proprietary code","3","I can imaginge that AI generated code could add certain improved code segments that otherwise might be forgotten. On the other hand not verifying and fixing AI generated code also often introduces bugs and potential security issues.","5","AI is really good at generating boilerplate code even when still including bugs, it's faster to verify and fix the AI code than to write the code manually.","4"," A lot of IDEs have plugins that make it easy to include certain AI tools, making it easy to integrate the AI.",""
"2024/03/17 3:20:13 pm EET","4","Automated Testing, Code documentation, and generation of general purpose code","When I say that I want to use AI, I mean that I want it to assist me in my daily day-to-day work.","4","The problem of finding the appropriate tool to solve the specific issue can be a major one. Also there might be different tool for different issue which would be overkill of resources if decided to implement all tools. Also limited resources can be a issue.","4","If AI has the complete access to the code base and also if you are able to prompt as detailed as possible regarding the feature you want to test","5","Day to day coding, querying small specific question, testing and small time consuming tasks like test case generation, change log etc ","5","focusing on human first AI adaptation i.e., AI tool is to assist human power not replace them. Identifying users that would be most suitable to utilize the tools and providing appropriate training  ",""